/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./public/hanging_light.glb --types 
Author: zelmore402 (https://sketchfab.com/zelmore402)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/hanging-bulb-light-6472a85d29e146218c8260b727985a81
Title: Hanging Bulb Light
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        Object_2: THREE.Mesh;
        Object_3: THREE.Mesh;
    };
    materials: {
        phong2SG: THREE.MeshPhysicalMaterial;
        phong1SG: THREE.MeshStandardMaterial;
    };
};

export function HangingLight(props: JSX.IntrinsicElements['group']) {
    const { nodes, materials } = useGLTF('/hanging_light.glb') as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, 0]}>
                <mesh
                    geometry={nodes.Object_2.geometry}
                    material={materials.phong2SG}
                />
                <mesh
                    geometry={nodes.Object_3.geometry}
                    material={materials.phong1SG}
                />
            </group>
        </group>
    );
}

useGLTF.preload('/hanging_light.glb');
